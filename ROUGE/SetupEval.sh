
#    (a) A simple file containing a two column list of peer(the file to be evaluated) file 
#        and the coresponding model (gold standard summary) file.
#
#    (b) A xml file containing the information of peer files and corresponding model files. Here each document can have multiple peers#
#	(each peer corresponds to a summary of the document generated by a particular system) as well as multiple models (each model
#	corresponds to a gold standard summary of the document). 
#
#	Explanation fo tags
#
#	  - <EVAL ID="1"> </EVAL>	Contains entire info about one particular document. Includes the following
#	  - <PEER-ROOT>			Path to the folder containing peers(summaries generated by different systems) of this document. 
#	  - <MODEL-ROOT>		Path to the folder containing models(gold standard summaries) of this document.
#	  - <INPUT-FORMAT TYPE="SEE">	Specifies the format of the input documents. Can be SEE, SPL, ISI or SIMPLE
#	  - <PEERS>			Contains list of peers in the format <P ID="C">peer1.html</P>
#	  - <MODELS>			Contains list of peers in the format <M ID="C">model1.html</M>
#
#   
#    Use the script SetupEval.sh to auto-generate an Evaluation file. 
#    	
#    The script assumes presence of two folders 
#     
#    (1) Benchmark: Contains exactly one benchmark summary for each supreme court judgement. Presently the script can't handle multiple summaries.#
#	 The documents should follow the naming convention <FileID>.headnote  
#	 FileID should not have any '.' in the name
#    (2) Output: Contains Summaries of each document. The naming convention to be followed is <FileID>.<summarisation model>
#
#    Usage: sh SetupEval.sh /absolute-path-to-the-parent-directory-containing-above-two-folders
#
#    This will create Eval.xml in the same folder which can then be used with ROUGE-1.5.5.pl. 
#    (Any version of ROUGE can be used not necessarily 1.5.5) 

#----------------------------------------------------------------------------------------------------------------------------------------------------

## If path is not provided current directory will be used as PATH variable

if [ "$1" = "" ]
then
	Path="."
else
	Path=$1
fi

echo "<ROUGE-EVAL version=\"1.0\">" > $Path/Eval.xml

## Look for headnotes in the Benchmark forlder. For each headnote file create a <EVAL> field in the xml file.

cd $Path/Benchmark

## The process is repeated for each file in the Benchmark folder
for i in *
do

OutputPath=$(echo $Path'/Output' | sed 's/\/\//\//')
BenchmarkPath=$(echo $Path'/Benchmark' | sed 's/\/\//\//')
FileId=$(echo $i | cut -d '.' -f 1)

echo "<EVAL ID=\"$FileId\">
<PEER-ROOT>
$OutputPath
</PEER-ROOT>
<MODEL-ROOT>
$BenchmarkPath
</MODEL-ROOT> 
<INPUT-FORMAT TYPE=\"SPL\">
</INPUT-FORMAT>
<PEERS>" >> $Path/Eval.xml

## The script will then look for Files with similar FileID in the Output folder. 	
for j in $(ls $Path/Output | grep $FileId'\.')
do

## Files in the Output folder are expected to have a name <FileID>.<summarisation model>
SysId=$(echo $j | cut -d '.' -f 2)

## Each File in the Output folder will be added to <PEER> tag in the Eval.xml file
echo "<P ID=\"$SysId\">$j</P>" >> $Path/Eval.xml

done
	
## Since only headnotes are being used as model files, a fixed <M ID = 1> is given in each <EVAL ID>
echo "</PEERS>
<MODELS>
<M ID=\"1\">$i</M>
</MODELS>
</EVAL>" >> $Path/Eval.xml

done

echo "</ROUGE-EVAL>" >> $Path/Eval.xml
